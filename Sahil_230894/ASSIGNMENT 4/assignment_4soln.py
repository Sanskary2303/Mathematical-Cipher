# -*- coding: utf-8 -*-
"""Assignment_4soln.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13KXvanEGHbSkUYZAuHJ6cAcLGTty7ICB
"""

!pip install pycryptodome
from Crypto.Random import get_random_bytes
from Crypto.Cipher import AES
from Crypto.Protocol.KDF import PBKDF2
from Crypto.Util.Padding import pad, unpad
import rsa

encryptedpassword='/content/Encrypted_password.txt'
cipherfile='/content/cipher.txt'
messagefile='/content/plain_text.txt'
decryptedfile='/content/decrypted.txt'
password="jeb_"

with open(messagefile,'w') as f:
  f.write("hi my name is sahil pandey eheheheheh")

chunk_size=64*1024
public_key , private_key= rsa.newkeys(1024)

# with open('public_key.pem', 'wb') as f:
#   f.write(public_key.save_pkcs1(('PEM')))

# with open('private_key.pem', 'wb') as f:
#   f.write(private_key.save_pkcs1('PEM'))

encrypted_password=rsa.encrypt(password.encode(), public_key)
with open(encryptedpassword,"wb") as f:
  f.write(encrypted_password)

decrypted_password=rsa.decrypt(encrypted_password,private_key)
print(decrypted_password.decode())

salt=get_random_bytes(32)
key=PBKDF2(decrypted_password,salt)
cipher=AES.new(key,AES.MODE_CBC)

with open(cipherfile,'wb') as q:
  q.write(cipher.iv)
  with open(messagefile,'rb') as f:
    chunk=f.read(chunk_size)
    while chunk:
     if(len(chunk)%AES.block_size!=0):
       padding_length=(AES.block_size-len(chunk)%AES.block_size)
       chunk+=b' '*padding_length
     data=cipher.encrypt(chunk)
     q.write(data)
     chunk=f.read(chunk_size)

key1=key
with open(cipherfile,'rb') as f:
  iv=f.read(AES.block_size)
  cipher=AES.new(key1,AES.MODE_CBC,iv)
  with open(decryptedfile,'wb') as q:
    chunk=f.read(chunk_size)
    while chunk:
      data=cipher.decrypt(chunk)
      q.write(data.rstrip(b' '))
      chunk=f.read(chunk_size)

